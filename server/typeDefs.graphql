type Query{
    test: String!
    findProblem(text: String): [Problem]
    getAllProblem: [Problem]
    refreshLogin(refreshToken:String): LoginResult
    myInfo: User
    findLevelByProblem(levels: [Int]): [Problem]
    getRandomProblem: Problem
    getPagePost(page: Int):  [Post]
    getAllPostCount: Int
}

type Mutation{
    register(id:String!, pw:String!, img:Upload, bojId: String): User,
    setUser(pw:String, img:Upload, bojId: String): LoginResult
    login(id:String!, pw:String!): LoginResult
    logout(refreshToken:String!): Boolean
    createPost(type:Int!, problem:String, title:String!, content:String): Post
    createComment(postId: Int!, content: String!): Comment
}

type Problem{
    title: String!
    url: String!
    lv: String!
    tag: String!
    _id: String!
    description: String!
}

type LoginResult{
    token: String
    refreshToken: String
}

type User{
    id: String
    img: String
    tier: String
    bojId: String
}

type Post{
    id: String!
    author: String!
    tier: String!
    content: String!
    date: String!
    type: Int!
    problem: String
    title: String!
}

type Comment{
    author: String!
    date: String!
    postId: Int!
    content: String! 
    tier: String!
    _id: String!
}